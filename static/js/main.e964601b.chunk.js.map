{"version":3,"sources":["assets/sound1.mp3","components/Shade.js","components/Shades.js","components/ShadeInput.js","App.js","index.js"],"names":["Shade","shade","onColorCopy","useState","copied","setCopied","useEffect","interval","setInterval","clearInterval","text","hexString","onCopy","className","style","backgroundColor","Shades","color","shades","setShades","audioRef","useRef","isColor","createShades","Values","current","play","ref","src","require","map","ShadeInput","props","type","value","onChange","e","onInputChange","target","App","setColor","randomColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sIAAA,OAAe,cAA0B,oC,6JCsC1BA,EAnCD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAAiB,EACPC,oBAAS,GADF,mBAC5BC,EAD4B,KACpBC,EADoB,KAGnCC,qBAAU,WACT,IAAIC,EACJ,GAAW,GAARH,EAIC,OAHAG,EAASC,aAAY,WACjBH,GAAU,KACZ,MACK,WACHI,cAAcF,MAGrB,CAACH,IAQH,OACI,cAAC,kBAAD,CAAiBM,KAAMT,EAAMU,YAAaC,OAAQ,kBANlDP,GAAU,QACVH,KAKA,SACI,qBAAKW,UAAU,QAAQC,MAAO,CAACC,gBAAgBd,EAAMU,aAArD,SAGIP,EAAU,sBAAMS,UAAU,SAAhB,qBACN,+BAAOZ,EAAMU,mBCElBK,EA5BA,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACEd,mBAAS,IADX,mBACjBe,EADiB,KACTC,EADS,KAElBC,EAAWC,mBACjBf,qBAAU,WACJgB,IAAQL,IACVM,MAEF,CAACN,IAEH,IAAMM,EAAa,WACf,IAAML,EAAO,IAAIM,IAAOP,GAAOC,OAAO,GACtCC,EAAUD,IAEThB,EAAY,WACdkB,EAASK,QAAQC,QAGpB,OACI,sBAAKb,UAAU,SAAf,UACE,uBAAOc,IAAKP,EAAUQ,IAAKC,EAAQ,MAE7BX,EAAOY,KAAI,SAAC7B,GAAD,OACR,cAAC,EAAD,CAAOA,MAAOA,EAAOC,YAAaA,WCbtC6B,EAXI,SAACC,GAChB,OACI,sBAAKnB,UAAU,eAAf,UACI,qBAAKA,UAAU,SAAf,0EACA,uBAAOoB,KAAK,OAAOpB,UAAU,cAAcqB,MAAOF,EAAMf,MACxDkB,SAAU,SAACC,GAAD,OAAKJ,EAAMK,cAAcD,EAAEE,OAAOJ,UAC5C,qBAAKrB,UAAU,SAAf,8E,wBCgBG0B,MAlBf,WAAgB,IAAD,EACUpC,mBAAS,QADnB,mBACNc,EADM,KACAuB,EADA,KAUb,OAPAlC,qBAAU,WACRkC,EAASC,SACT,IAMA,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CAAYI,MAAOA,EAAOoB,cALV,SAACH,GACnBM,EAASN,MAKP,cAAC,EAAD,CAAQjB,MAAOA,QCdrByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e964601b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sound1.87567b75.mp3\";","import React,{useState,useEffect} from 'react'\r\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\r\n\r\nconst Shade = ({shade,onColorCopy}) => {\r\n    const [copied, setCopied] = useState(false);\r\n\r\n    useEffect(()=>{\r\n     let interval;\r\n     if(copied==true){\r\n         interval=setInterval(()=>{\r\n             setCopied(false);\r\n         },1500);\r\n         return ()=>{\r\n             clearInterval(interval);\r\n         }\r\n     }\r\n    },[copied])\r\n    \r\n    const onCopy=()=>{\r\n        setCopied(true);\r\n        onColorCopy();\r\n    }\r\n\r\n\r\n    return (\r\n        <CopyToClipboard text={shade.hexString()} onCopy={()=>onCopy()}>\r\n            <div className=\"shade\" style={{backgroundColor:shade.hexString()}}>\r\n\r\n            {\r\n                copied ?( <span className=\"copied\" >copied!</span>):(\r\n                    <span>{shade.hexString()}</span>\r\n                )\r\n            }\r\n            </div>\r\n        </CopyToClipboard>\r\n    )\r\n}\r\n\r\nexport default Shade;\r\n","import React ,{useState,useEffect,useRef}from 'react'\r\nimport Values from \"values.js\"; \r\nimport isColor from \"is-color\";\r\nimport Shade from \"./Shade\";\r\nconst Shades = ({color}) => {\r\n    const [shades, setShades]=useState([]);\r\n    const audioRef = useRef();\r\n    useEffect(()=>{\r\n       if(isColor(color)){\r\n        createShades();\r\n       }\r\n    },[color]);\r\n\r\n    const createShades=()=>{\r\n        const shades=new Values(color).shades(1);\r\n        setShades(shades);\r\n    };\r\n   const onColorCopy=()=>{\r\n       audioRef.current.play();\r\n   };\r\n\r\n    return (\r\n        <div className=\"shades\"> \r\n          <audio ref={audioRef} src={require(\"../assets/sound1.mp3\")} />\r\n            {\r\n                shades.map((shade)=>\r\n                   <Shade shade={shade} onColorCopy={onColorCopy}/> )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shades;\r\n","import React from 'react'\r\n\r\nconst ShadeInput = (props) => {\r\n    return (\r\n        <div className=\"shade-search\">\r\n            <div className=\"emojis\">🎡🎨🏢🎡🎨</div>\r\n            <input type=\"text\" className=\"shade-input\" value={props.color}\r\n            onChange={(e)=>props.onInputChange(e.target.value)}/>\r\n            <div className=\"emojis\">🎡🎨🏢🎡🎨</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShadeInput\r\n","import React,{useState,useEffect} from 'react';\nimport Shades from './components/Shades';\nimport ShadeInput from './components/ShadeInput';\nimport './App.css';\nimport randomColor from \"randomcolor\";\n\nfunction App() {\n  const [color,setColor]=useState(\"#000\");\n    \n  useEffect(()=>{\n    setColor(randomColor());\n  },[]);\n\n  const onInputChange=(value)=>{\n    setColor(value);\n  }\n  return (\n    <div className=\"App\">\n      <ShadeInput color={color} onInputChange={onInputChange} />\n      <Shades color={color}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}